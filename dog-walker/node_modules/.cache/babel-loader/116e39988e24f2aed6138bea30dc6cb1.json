{"ast":null,"code":"var _jsxFileName = \"/home/blake/Documents/react/dog-walker/dog-walker/src/pages/DogPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DogPage = ({\n  dogID\n}) => {\n  _s();\n\n  const number = dogID;\n  const [dogInfo, setDogInfo] = useState({\n    name: 'Bowie',\n    owner: 'Blake',\n    breed: 'Australian Cattle Dog',\n    location: '1000 Paper St. Cincinnati OH 45000',\n    age: 3,\n    desc: 'This bundle of energy loves to go on walks!',\n    payment: '$25',\n    image: '',\n    sex: 'male'\n  });\n  const [size, setSize] = useState({\n    size: 1\n  });\n  const numArray = [0];\n\n  const generateDog = e => {\n    const fetchData = async () => {\n      // Generate random number\n      let rand = 0;\n\n      while (numArray.includes(rand) == true) {\n        const rand = Math.floor(Math.random() * 9 + 1);\n        console.log(rand);\n        console.log(numArray.includes(rand));\n      }\n\n      numArray.push(rand);\n      const result = await fetch(`/api/dogs/${rand}`);\n      const body = await result.json();\n      setDogInfo(body);\n    };\n\n    fetchData();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/dogs/${dogID}`);\n      const body = await result.json();\n      setDogInfo(body);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: dogInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          children: [\"Breed: \", dogInfo.breed, \" Age: \", dogInfo.age, \" Sex: \", dogInfo.sex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: dogInfo.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: /*#__PURE__*/_jsxDEV(Card.Description, {\n          children: [\"Location: \", dogInfo.location, \" Payment: \", dogInfo.payment, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: generateDog,\n      children: \"Skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      secondary: true,\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DogPage, \"ETdrO1PS6biEoYUOhhtGvor6X/k=\");\n\n_c = DogPage;\nexport default DogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DogPage\");","map":{"version":3,"sources":["/home/blake/Documents/react/dog-walker/dog-walker/src/pages/DogPage.js"],"names":["React","useState","useEffect","Button","Card","Image","DogPage","dogID","number","dogInfo","setDogInfo","name","owner","breed","location","age","desc","payment","image","sex","size","setSize","numArray","generateDog","e","fetchData","rand","includes","Math","floor","random","console","log","push","result","fetch","body","json"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Button, Card, Image } from 'semantic-ui-react';\n\nconst DogPage = ( {dogID}) => {\n\n  const number = dogID;\n  const [dogInfo, setDogInfo] = useState({\n    name: 'Bowie',\n    owner: 'Blake',\n    breed: 'Australian Cattle Dog',\n    location: '1000 Paper St. Cincinnati OH 45000',\n    age: 3,\n    desc: 'This bundle of energy loves to go on walks!',\n    payment: '$25',\n    image: '',\n    sex: 'male',\n  });\n\n  const [size, setSize] = useState({ size: 1});\n  const numArray = [0];\n\n  const generateDog = (e) => {\n    const fetchData = async () => {\n      // Generate random number\n      let rand = 0;\n      while (numArray.includes(rand) == true) {\n        const rand = Math.floor((Math.random() * 9) + 1);\n        console.log(rand);\n        console.log(numArray.includes(rand));\n      }\n      numArray.push(rand);\n      const result = await fetch(`/api/dogs/${rand}`);\n\n      const body = await result.json();\n      setDogInfo(body);\n    }\n    fetchData();\n  }\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/dogs/${dogID}`);\n      const body = await result.json();\n      setDogInfo(body);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n    <Card>\n      <Card.Content>\n        <Image />\n        <Card.Header>{dogInfo.name}</Card.Header>\n        <Card.Meta>Breed: {dogInfo.breed} Age: {dogInfo.age} Sex: {dogInfo.sex}</Card.Meta>\n        <Card.Description>{dogInfo.desc}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Card.Description>Location: {dogInfo.location} Payment: {dogInfo.payment} </Card.Description>\n      </Card.Content>\n    </Card>\n    <Button primary onClick={generateDog}>Skip</Button>\n    <Button secondary>Message</Button>\n  </>\n  );\n}\n\nexport default DogPage;\n"]},"metadata":{},"sourceType":"module"}